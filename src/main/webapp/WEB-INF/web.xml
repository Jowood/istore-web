<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	version="2.4">

    <display-name>Frame5.0</display-name>

    <!--设置环境变量，将应用程序目录存储到环境变量Frame5.root-->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>frame5.root</param-value>
    </context-param>
    
    <!--web过滤器 设置字符串过滤器，解决表单提交中的乱码问题-->
    <!--设置环境变量指定log4j的配置文件-->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.properties</param-value>
    </context-param>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:applicationContext.xml  
            classpath:scheduling-quartz.xml
            classpath:com/istore/login/login-service.xml
            classpath:com/istore/ebook/ebook-service.xml
            classpath:com/istore/employee/employee-service.xml
        </param-value>
    </context-param> 

    <!--设置log4j的监听，使日志组件能够使用，调用log4jConfigLocation中设置的环境变量-->
    <listener>
        <listener-class>
            org.springframework.web.util.Log4jConfigListener
        </listener-class>
    </listener>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.directwebremoting.servlet.DwrListener</listener-class>
    </listener>

 


    <!--web过滤器 设置字符串过滤器，解决表单提交中的乱码问题-->
    <filter>
        <filter-name>WebFilter</filter-name>
        <filter-class>com.framework.system.WebFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>WebFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--dwr servlet-->
    <servlet>
        <servlet-name>dwr</servlet-name>
        <servlet-class>com.framework.system.DwrServlet</servlet-class>
        <!-- This should NEVER be present in live -->
        <init-param>
            <param-name>debug</param-name>
            <param-value>true</param-value>
        </init-param>

        <!-- Remove this unless you want to use active reverse ajax -->
        <init-param>
            <param-name>activeReverseAjaxEnabled</param-name>
            <param-value>true</param-value>
        </init-param>

        <!-- By default DWR creates application scope objects when they are first
          used. This creates them when the app-server is started -->
        <init-param>
            <param-name>initApplicationScopeCreatorsAtStartup</param-name>
            <param-value>true</param-value>
        </init-param>

        <!-- WARNING: allowing JSON-RPC connections bypasses much of the security
          protection that DWR gives you. Take this out if security is important -->
        <init-param>
            <param-name>jsonRpcEnabled</param-name>
            <param-value>true</param-value>
        </init-param>

        <!-- WARNING: allowing JSONP connections bypasses much of the security
          protection that DWR gives you. Take this out if security is important -->
        <init-param>
            <param-name>jsonpEnabled</param-name>
            <param-value>true</param-value>
        </init-param>

        <!-- data: URLs are good for small images, but are slower, and could OOM for
          larger images. Leave this out (or keep 'false') for anything but small images -->
        <init-param>
            <param-name>preferDataUrlSchema</param-name>
            <param-value>false</param-value>
        </init-param>

        <!-- This enables full streaming mode. It's probably better to leave this
          out if you are running across the Internet -->
        <init-param>
            <param-name>maxWaitAfterWrite</param-name>
            <param-value>-1</param-value>
        </init-param>

        <!--
          For more information on these parameters, see:
          - http://getahead.org/dwr/server/servlet
          - http://getahead.org/dwr/reverse-ajax/configuration
          -->
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dwr</servlet-name>
        <url-pattern>/dwr/*</url-pattern>
    </servlet-mapping> 
    
    <!--登录的控制器配置-->
    <servlet>
        <servlet-name>login</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:com/istore/login/login-controller.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>login</servlet-name>
        <url-pattern>*.login</url-pattern>
    </servlet-mapping>    
    
     <!--电子图书的控制器配置-->
    <servlet>
        <servlet-name>ebook</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:com/istore/ebook/ebook-controller.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>ebook</servlet-name>
        <url-pattern>*.ebook</url-pattern>
    </servlet-mapping>
    
    <!--雇员的控制器配置-->
    <servlet>
        <servlet-name>emp</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:com/istore/employee/employee-controller.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>emp</servlet-name>
        <url-pattern>*.emp</url-pattern>
    </servlet-mapping>
    
    <!--系统启动时加载用户信息-->
    <servlet>
        <servlet-name>loadUserServlet</servlet-name>
        <servlet-class>com.istore.system.LoadUserServlet</servlet-class>
        <init-param>
            <param-name>configFile</param-name>
            <param-value>WEB-INF/config/user.xml</param-value>
        </init-param>
        <load-on-startup>3</load-on-startup>
    </servlet>

    <!--系统启动时加载项目信息-->
    <servlet>
        <servlet-name>loadProjectServlet</servlet-name>
        <servlet-class>com.istore.system.LoadProjectServlet</servlet-class>
        <init-param>
            <param-name>configFile</param-name>
            <param-value>WEB-INF/config/project.xml</param-value>
        </init-param>
        <load-on-startup>4</load-on-startup>
    </servlet>
    
    <!--系统启动时加载目录信息-->
    <servlet>
        <servlet-name>loadCatalogServlet</servlet-name>
        <servlet-class>com.istore.system.LoadCatalogServlet</servlet-class>
        <init-param>
            <param-name>configFile</param-name>
            <param-value>WEB-INF/config/catalog.xml</param-value>
        </init-param>
        <load-on-startup>4</load-on-startup>
    </servlet>
    <!--系统启动时加载文件信息-->
    <servlet>
        <servlet-name>loadFileServlet</servlet-name>
        <servlet-class>com.istore.system.LoadFileServlet</servlet-class>
        <init-param>
            <param-name>configFile</param-name>
            <param-value>WEB-INF/config/file.xml</param-value>
        </init-param>
        <load-on-startup>5</load-on-startup>
    </servlet>
    <!--系统启动时加载雇员信息-->
    <servlet>
        <servlet-name>loadEmployeeServlet</servlet-name>
        <servlet-class>com.istore.system.LoadEmployeeServlet</servlet-class>
        <init-param>
            <param-name>configFile</param-name>
            <param-value>WEB-INF/config/employee.xml</param-value>
        </init-param>
        <load-on-startup>5</load-on-startup>
    </servlet>        
    <!--系统启动时加载配置参数-->
    <servlet>
        <servlet-name>startupServlet</servlet-name>
        <servlet-class>com.framework.system.StartupServlet</servlet-class>
        <init-param>
            <param-name>configFile</param-name>
            <param-value>WEB-INF/config/system.xml</param-value>
        </init-param>
        <load-on-startup>1000</load-on-startup>
    </servlet>

        
	<!-- session的生命周期 -->
	<session-config>
		<session-timeout>45</session-timeout>
	</session-config>
    <!--欢迎页配置-->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
        <!--<welcome-file>index.htm</welcome-file>-->
        <!--<welcome-file>index.jsp</welcome-file>-->
        <!--<welcome-file>default.html</welcome-file>-->
        <!--<welcome-file>default.htm</welcome-file>-->
        <!--<welcome-file>default.jsp</welcome-file>-->
    </welcome-file-list>	
</web-app>